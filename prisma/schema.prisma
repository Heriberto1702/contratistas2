generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccesoPasswords {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  reset_token   String?
  reset_expires DateTime?
  last_login    DateTime  @default(now())
  createdAt     DateTime  @default(now())
}

model Cliente {
  id_tipo_contratista Int               @id @default(autoincrement())
  tipo_cliente        String
  LoginPlataforma     LoginPlataforma[]
}

model Club {
  id_tipo_club Int            @id
  tipo_club    String
  Contratistas Contratistas[]
}

model Contratistas {
  id_contratista_aprob Int     @id @default(autoincrement())
  RUC                  String
  cedula               String
  xstoreID             String
  nombre_registrado    String
  activo               Boolean
  id_tipo_club         Int
  Club                 Club    @relation(fields: [id_tipo_club], references: [id_tipo_club])
}

model Cursos {
  id_curso            Int                   @id @default(autoincrement())
  nombre_curso        String
  descripcion         String
  recomendaciones     String
  imagen_curso        String
  detalles_curso      String
  tipo_curso          String
  especialista        String
  hora                String
  rubro               String
  fecha_hora_Inicio   DateTime
  fecha_hora_Fin      DateTime
  Cursos_Matriculados Cursos_Matriculados[]
  Sesiones            Sesiones[]
}

model Cursos_Matriculados {
  id_matriculas   Int             @id @default(autoincrement())
  id_contratista  Int
  id_curso        Int
  avance          Float
  estado          String
  LoginPlataforma LoginPlataforma @relation(fields: [id_contratista], references: [id_contratista])
  Cursos          Cursos          @relation(fields: [id_curso], references: [id_curso])
}

model Departamentos {
  id_departamento     Int               @id @default(autoincrement())
  nombre_departamento String
  LoginPlataforma     LoginPlataforma[]
  Municipios          Municipios[]
}

model Especialidad {
  id_especialidad     Int               @id @default(autoincrement())
  nombre_especialidad String
  LoginPlataforma     LoginPlataforma[]
}

model Eventos {
  id_evento         Int                 @id @default(autoincrement())
  nombre_evento     String
  locacion          String
  cupos             Int
  imagen_evento     String
  fecha_hora        String
  cupo_reservado    Int
  imagen_des_evento String
  Eventos_Asistidos Eventos_Asistidos[]
}

model Eventos_Asistidos {
  id_asistencia   Int             @id @default(autoincrement())
  id_evento       Int
  id_contratista  Int
  LoginPlataforma LoginPlataforma @relation(fields: [id_contratista], references: [id_contratista])
  Eventos         Eventos         @relation(fields: [id_evento], references: [id_evento])
}

model LoginPlataforma {
  id_contratista        Int                   @id @default(autoincrement())
  ruc                   String
  cedula                String
  password              String
  nombres_contratista   String
  apellidos_contratista String
  email                 String                @unique
  id_especialidad       Int
  celular               String
  id_tipo_contratista   Int
  telefono_fijo         String?
  id_sexo               Int
  fecha_nacimiento      String
  id_departamento       Int
  id_municipio          Int
  Cursos_Matriculados   Cursos_Matriculados[]
  Eventos_Asistidos     Eventos_Asistidos[]
  Departamentos         Departamentos         @relation(fields: [id_departamento], references: [id_departamento])
  Especialidad          Especialidad          @relation(fields: [id_especialidad], references: [id_especialidad])
  Municipios            Municipios            @relation(fields: [id_municipio], references: [id_municipio])
  Sexo                  Sexo                  @relation(fields: [id_sexo], references: [id_sexo])
  Cliente               Cliente               @relation(fields: [id_tipo_contratista], references: [id_tipo_contratista])
}

model Modulos {
  id_modulo     Int      @id @default(autoincrement())
  id_sesion     Int
  titulo_modulo String
  contenido     String
  Sesiones      Sesiones @relation(fields: [id_sesion], references: [id_sesion])
}

model ModulosCompletados {
  id_contratista   Int
  fecha_completado DateTime @default(now())
  id_curso         Int
  id_modulo        Int
  id_sesion        Int?
  id               Int      @id @default(autoincrement())

  @@unique([id_contratista, id_modulo])
}

model Municipios {
  id_municipio     Int               @id @default(autoincrement())
  nombre_municipio String
  id_departamento  Int
  LoginPlataforma  LoginPlataforma[]
  Departamentos    Departamentos     @relation(fields: [id_departamento], references: [id_departamento])
}

model Ordenes {
  id_ordenes      Int    @id @default(autoincrement())
  id_orden        Int
  nombre_producto String
  cantidad        Int
  precio          Float
  monto           Float
  descuento       Int
  total           Float
}

model Sesiones {
  id_sesion     Int       @id @default(autoincrement())
  id_curso      Int
  nombre_sesion String
  descripcion   String
  fecha_hora    DateTime
  Modulos       Modulos[]
  Cursos        Cursos    @relation(fields: [id_curso], references: [id_curso])
}

model Sexo {
  id_sexo         Int               @id @default(autoincrement())
  sexo            String
  LoginPlataforma LoginPlataforma[]
}
